name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Paso 1: Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # Paso 2: Configurar JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Paso 3: Cachear dependencias Maven
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      # Paso 4: Construir y verificar con Maven
      - name: Build with Maven
        run: mvn clean verify

      # Paso 5: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      # Paso 6: Iniciar sesi√≥n en Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Paso 7: Construir y publicar la imagen Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fintrack:latest

      # Paso 8: Despliegue en AKS (Comentado)
      # - name: Azure Login
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Set Kubernetes Context
      #   uses: azure/aks-set-context@v2
      #   with:
      #     resource-group: fintrack-cluster
      #     cluster-name: fintrack-cluster

      # - name: Deploy to Kubernetes
      #   run: |
      #     kubectl apply -f deployment.yml
      #     kubectl apply -f postgres-deployment.yml
      #     kubectl apply -f postgres-pv.yml

      # Paso 9: Verificar despliegue (Comentado)
      # - name: Verify Deployment
      #   run: |
      #     kubectl get pods
      #     kubectl get services
